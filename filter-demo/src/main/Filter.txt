Filter   1filter.png
    概念: Filter表示过滤器，是JavaWeb三大组件(Servlet、Filter、Listener)之一。
    过滤器可以把对资源的请求拦截下来，从而实现一些特殊的功能。
    过滤器一般完成一些通用的操作，比如:权限控制、统一编码处理、敏感字符处理等等...

Filter快速入门  FilterDemo && hello.jsp && 2filter快速入门.png
1.定义类，实现 Filter接口，并重写其所有方法
    public class FilterDemo implements Filter {
        public void init(FilterConfig filterConfig){}
        public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) {}
        public void destroy(){}
    }
2.配置Filter拦截资源的路径:在类上定义@WebFilter注解
    @WebFilter("/*")
    public class FilterDemo implements Filter {
3.在doFilter方法中输出一句话，并放行
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) {
        system.out.println("filter被执行了...");
        //放行
        filterChain.doFilter(servletRequest, servletResponse);
    }

filter快速入门    FilterDemo && hello.jsp && 3filter执行流程.png
    1．放行后访问对应资源，资源访问完成后，还会回到Filter中吗?
        会
    2．如果回到Filter中，是重头执行还是执行放行后的逻辑呢?
        放行后逻辑
        执行放行前逻辑==》放行==》访问资源==》执行放行后逻辑

Filter拦截路径配置    FilterDemo2 && hello.jsp && 4filter拦截路径配置.png
Filter可以根据需求，配置不同的拦截资源路径
    @WebFilter(" /*")
    public class FilterDemo
        >拦截具体的资源:/index.jsp:只有访问index.jsp时才会被拦截。
        >目录拦截:/user/*:访问/user下的所有资源，都会被拦截
        >后缀名拦截: *.jsp:访问后缀名为jsp的资源，都会被拦截
        >拦截所有:/*:访问所有资源，都会被拦截

过滤器链     5过滤器链.png
一个Web应用，可以配置多个过滤器，这多个过滤器称为过滤器链
注解配置的Filter，优先级按照过滤器类名(字符串)的自然排序

案例 登陆验证  在之前的案例中我们登录后就在Session内存储了user对象       brand-demo-finally
·需求:访问服务器资源时，需要先进行登录验证，如果没有登录，则自动跳转到登录页面
0.判断访问的是否是登录相关资源
    是:放行
    不是:进行登录验证
1.判断用户是否登录:
    >登录:直接放行
    >未登录:跳转到登录页面，并给出提示信息


                                                    Listener见brand-demo-finally