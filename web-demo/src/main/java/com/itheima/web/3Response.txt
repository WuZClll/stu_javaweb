Response:响应
Response完成重定向
·重定向(Redirect):一种资源跳转方式
浏|--------请求-------->资
览|<-------响应--------·源A
器|          |
  \          \_.1.我处理不了，找别人处理去吧  状态码302
   \          `.2.那个人的位置是xxx：响应头  location:xxx
    \
     `----->资源B
实现方式:
    resp.setStatus(302);//设置响应状态码
    resp.setHeader("location”,“资源B的路径");//设置响应头（头的名称是固定的，头的值是路径）
简化书写：
    resp.sendRedirect("资源B的路径")
重定向特点:
    浏览器地址栏路径发生变化
    可以重定向到任意位置的资源（服务器内部、外部均可)
    两次请求，不能在多个资源使用request共享数据
路径问题:
    浏览器使用:需要加虚拟目录(项目访问路径)
    服务端使用:不需要加虚拟目录
练习:
    <a href=‘路径’>加虚拟目录
    <form action=‘路径’>加虚拟目录
    req.getRequestDispatcher(“路径")不加虚拟目录>//请求转发
    resp.sendRedirect(“路径")加虚拟目录//重定向

Response响应字符数据
使用:
    1.通过Response对象获取字符输出流
        PrintWriter writer = resp.getWriter();//●注意:该流不需要关闭，随着响应结束，response对象销毁，由服务器关闭
    2.写数据
        //content-type
        response.setHeader("content-type", "text/html");//告诉浏览器相应的数据是html格式的,不写此代码表示纯文本
        writer.write("<h1>aaa</h1>");
注意:
    ·该流(write)不需要关闭，随着响应结束，response对象销毁，由服务器关闭
    .中文数据乱码:原因通过Response获取的字符输出流默认编码:ISO-8859-1
        resp.setContentType("text/html;charset=utf-8");

Response响应字节数据
·使用:
    1.通过Response对象获取字符输出流
        ServletOutputStream outputStream = resp.getOutputStream();
    2.写数据
        outputStream.write(字节数据);
. IOUtils工具类使用
    1．导入坐标
        <dependency>
        <groupld>commons-io</groupld>
        <artifactld>commons-io</artifactld>
        <version>2.6</version>
        </dependency>
    2.使用
        IOUtils.corv(输入流.输出流):
